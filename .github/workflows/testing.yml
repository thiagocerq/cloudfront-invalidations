ame: Upload arbosite to test server

on:
  push:
    branches:
    - testing

jobs:
  build-arbo:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [8]

    steps:
      - uses: actions/checkout@master

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Caching Node dependencies (node_modules)
      - name: Cache NODE dependencies
        uses: actions/cache@v2
        env:
          node-cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-testing-${{ env.node-cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-testing-${{ env.node-cache-name }}
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Caching Bower dependencies (bower_components)
      - name: Cache BOWER dependencies
        uses: actions/cache@v2
        env:
          bower-cache-name: cache-bower-modules
        with:
          path: bower_components
          key: ${{ runner.os }}-build-testing-${{ env.bower-cache-name }}-${{ hashFiles('**/bower.json') }}
          restore-keys: |
            ${{ runner.os }}-build-testing-${{ env.bower-cache-name }}
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install dependencies (node and bower)
      - name: Install dependencies
        run: |
          sudo chown -R $USER /usr/local/lib/node_modules
          npm install
          npm install -g bower 
          bower -V --allow-root install
      # Build and deploy
      - name: Deploy
        run: |
          sudo gulp config:test
          sudo gulp build
          echo "Deploy ARBO..."
      # Upload build artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-artifact
          path: dist/*

  # Download the build artifacts to server
  deploy-arbo:
    needs: build-arbo
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Download build artifacts from build-arbo
      uses: actions/download-artifact@v2
      with:
        name: dist-artifact
        path: dist/
    
    # Upload builded site to test server
    - name: Send artifacts to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        source: "dist/*"
        target: "/var/www/test-workflow/"
    
    # Delete gulp build artifacts 
    - name: Delete front-end artifact
      uses: geekyeggo/delete-artifact@v1
      with:
        name: dist-artifact
